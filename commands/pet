const { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder, Client } = require('discord.js');
const fs = require('node:fs');
const { AddPlayer, UpdatePlayer, SearchPlayer, InitDb, PlayerData } = require("./../Modules/Database");

//[建立/回覆 button] -> [建立 collector] -> [輸贏啦] -> [讀檔] -> [解析] -> [做事]  -> [回應] -> [存檔]

module.exports = {
    data: new SlashCommandBuilder()
        .setName('pet')
        .setDescription('Have your discord pet!'),

    async execute(client, interaction) {
        //建立 embed 和剪刀石頭布的三個 button
        const buttonEmbed = new EmbedBuilder()
            .setColor("#ffffff")
            .setTitle(`Pet menu`)
        // .setDescription(`結果：${earnings}元\n你現在有 ${players[i].money} 元!`);
        // interaction.reply({ embeds: [diceEmbed] });

        const storeButton = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('store')
            // .setURL('')
            .setLabel('商店store');
        const storeItem1 = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('storeItem1')
            // .setURL('')
            .setLabel('魚fish');
        const storeItem2 = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('storeItem2')
            // .setURL('')
            .setLabel('魚fish');
        const storeItem3 = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('storeItem3')
            // .setURL('')
            .setLabel('魚fish');
        
        const ShopRow = new ActionRowBuilder().addComponents(storeItem1, storeItem2, storeItem3);

        const statButton = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('stat')
            // .setURL('')
            .setLabel('狀態--stat');

        const restButton = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('rest')
            // .setURL('')
            .setLabel('休息--rest');

        const exerciseButton = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('exercise')
            // .setURL('')
            .setLabel('運動--exercise');

        const codeButton = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('code')
            // .setURL('')
            .setLabel('打code--coding');

        const feedButton = new ButtonBuilder()
            .setStyle(ButtonStyle.Primary)
            .setCustomId('feed')
            // .setURL('')
            .setLabel('餵食--feed');

        //將三個 button 都放入 row 中並回覆 embed 和 row
        const buttonRow = new ActionRowBuilder().addComponents(storeButton, statButton, restButton);
        const buttonRow2 = new ActionRowBuilder().addComponents(exerciseButton, codeButton, feedButton);
        //回覆
        interaction.reply({ embeds: [buttonEmbed], components: [buttonRow, buttonRow2] });

        //建立 collector
        const collector = interaction.channel.createMessageComponentCollector({ time: 15000 });

        // console.log(collected);

        // await InitDb();

        const PlayerId = interaction.user.id;
        const start_money = 500;
        const start_pet_hungry = 0;
        const start_pet_fatigue = 0;
        const start_age = 0;
        const start_foods = 0;

        SearchPlayer(PlayerId)
            .then((Result) => {
                if (Result.length == 0) {
                    AddPlayer(PlayerId, start_money, start_pet_hungry, start_pet_fatigue, start_age, start_foods)
                        .then((Success) => {
                            if (!Success) {
                                console.error(`Failed to add ${PlayerId} to DB`);
                            }
                        });
                } else {
                    //...  
                }

                collector.on('collect', async collected => {

                    const customId = collected.customId;
                    //利用玩家所按按鈕的 customId 來判斷玩家的選擇
                    if (customId == "stat") {
                        const embed = new EmbedBuilder()
                            .setTitle('狀態:')
                            .setColor("Random")
                            .addFields({ name: '商品1', value: '商品1只是個示範', inline: true });
                        interaction.followUp({ embeds: [embed] });

                    }
                    else if (customId == "store") {
                        const embed = new EmbedBuilder()
                            .setTitle('商店...沒貨')
                            .setColor("Random")
                            .addFields({ name: '商品1', value: '商品1只是個示範', inline: true });
                        interaction.followUp({ embeds: [embed] });
                    }
                    else if (customId == "rest") {
                        const embed = new EmbedBuilder()
                            .setTitle('休息...沒寵物')
                            .setColor("Random")
                            .addFields({ name: '.....', value: '只是個示範', inline: true });
                        interaction.followUp({ embeds: [embed] });
                    }
                    else if (customId == "excercise") {
                        const embed = new EmbedBuilder()
                            .setTitle('運動...沒code')
                            .setColor("Random")
                            .addFields({ name: 'yeet', value: '只是個示範', inline: true });
                        interaction.followUp({ embeds: [embed] });
                    }
                    else if (customId == "code") {
                        const embed = new EmbedBuilder()
                            .setTitle('打code...沒辦法')
                            .setColor("Random")
                            .addFields({ name: 'KK', value: '只是個示範', inline: true });
                        interaction.followUp({ embeds: [embed] });
                    }
                    else if (customId == "feed") {
                        const embed = new EmbedBuilder()
                            .setTitle('餵食...沒食物')
                            .setColor("Random")
                            .addFields({ name: 'QQ', value: '只是個示範', inline: true });
                        interaction.followUp({ embeds: [embed] });
                    }
                    
                    //關閉 collector
                    collector.stop();

                });
            });
    }
};